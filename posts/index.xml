<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on AlexPresso</title><link>https://alexpresso.me/posts/</link><description>Recent content in Posts on AlexPresso</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Sep 2021 23:56:46 +0200</lastBuildDate><atom:link href="https://alexpresso.me/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>When (not) to use graph databases</title><link>https://alexpresso.me/posts/when-to-use-graph-databases/</link><pubDate>Wed, 01 Sep 2021 23:56:46 +0200</pubDate><guid>https://alexpresso.me/posts/when-to-use-graph-databases/</guid><description>
&lt;img src="https://wallpaperaccess.com/full/5568.jpg"/>
Introduction After more than three years of using Neo4J (a graph database based on the JVM), I wanted to share the benefits and drawbacks of using such a technology.
What is a Graph Database ? First things first, a graph database is a NoSQL database based (as its name suggests) on the graphs theory. It was created to address the limitations of relational databases by storing complex interconnected data, in a pure conceptual way using nodes and relationships.</description></item></channel></rss>